/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import ClientProject.ClientProject;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Vector;
import javax.swing.DefaultListModel;
import util.Contact;

/**
 *
 * @author aelshafei
 */
public class AddConversation extends javax.swing.JFrame {

    /**
     * Creates new form AddConversation
     */
    
    ClientProject ClientProject;
    DefaultListModel contactList;
    DefaultListModel contactConversationtList;
    Vector<Contact> contacts;
    
    public AddConversation(ClientProject clientProject) {
        initComponents();
        setTitle("Add Conversation");
        this.ClientProject = clientProject;
        System.out.println("Trying to add conversation");
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        contacts = new Vector<Contact>();
        
        jl_contacts.setModel(new DefaultListModel());
        jl_conversationContacts.setModel(new DefaultListModel());
        
        contactList = (DefaultListModel) jl_contacts.getModel();
        contactConversationtList = (DefaultListModel) jl_conversationContacts.getModel();
        
        //filling contact list
        for(Contact contact:clientProject.mainFrame.contacts){
            contactList.addElement(contact.getEmail());
        }
        
        
        //add contact to conversation
        jb_addContact.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                boolean found = false;
                if(!jl_contacts.isSelectionEmpty()){
                    if(contactConversationtList.size() > 0){
                        for(int i=0;i<contactConversationtList.size();i++){
                            if(contactConversationtList.getElementAt(i).equals(jl_contacts.getSelectedValue())){
                                found = true;
                            }
                        }
                    }                    
                    if(!found){
                        contactConversationtList.addElement((String) jl_contacts.getSelectedValue());
                        contacts.add(new Contact((String) jl_contacts.getSelectedValue(), null));
                    }
                }
            }
        });
        
        // remove contact
        jb_removeUser.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                if(!jl_conversationContacts.isSelectionEmpty()){
                    contacts.remove(jl_conversationContacts.getSelectedIndex());
                    contactConversationtList.removeElementAt(jl_conversationContacts.getSelectedIndex());    
                }
            }
        });
        
        //open new conversation
        jb_beginConversation.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                
               ChatConversationFrame newChatConversationFrame = new ChatConversationFrame(ClientProject, contacts);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jl_contacts = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jl_conversationContacts = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jb_addContact = new javax.swing.JButton();
        jb_removeUser = new javax.swing.JButton();
        jb_beginConversation = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(jl_contacts);

        jScrollPane2.setViewportView(jl_conversationContacts);

        jLabel1.setText("Add Conversation :");

        jLabel2.setText("contacts :");

        jLabel3.setText("Conversation Contacts : ");

        jb_addContact.setText("Add");
        jb_addContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_addContactActionPerformed(evt);
            }
        });

        jb_removeUser.setText("remove");

        jb_beginConversation.setText("Begin Conversation");
        jb_beginConversation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_beginConversationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(jb_addContact, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jb_removeUser))))
                .addContainerGap(46, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jb_beginConversation)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jb_addContact))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_removeUser)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jb_beginConversation, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jb_addContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_addContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_addContactActionPerformed

    private void jb_beginConversationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_beginConversationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_beginConversationActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddConversation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddConversation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddConversation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddConversation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new AddConversation().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jb_addContact;
    private javax.swing.JButton jb_beginConversation;
    private javax.swing.JButton jb_removeUser;
    private javax.swing.JList jl_contacts;
    private javax.swing.JList jl_conversationContacts;
    // End of variables declaration//GEN-END:variables
}
